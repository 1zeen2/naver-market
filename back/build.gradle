<<<<<<< HEAD
// back/build.gradle (back 모듈의 build.gradle)
// 이 파일은 'back' 모듈에 특화된 의존성만 정의합니다.
// 공통 설정 (그룹, 버전, 자바 설정, 공통 의존성 등)은
// 루트 프로젝트의 build.gradle (naver-market/build.gradle)에서 관리됩니다.

plugins {
    // ✨ 'back' 모듈이 Java 프로젝트임을 명시적으로 선언합니다.
    // 이렇게 해야 'implementation'과 같은 의존성 선언이 인식됩니다.
    id 'java'
    // Spring Boot 및 Dependency Management 플러그인은 루트에서 apply false 후
    // subprojects 블록에서 apply 했으므로 여기서는 다시 명시할 필요 없습니다.
    // id 'org.springframework.boot' version '3.4.3'
    // id 'io.spring.dependency-management' version '1.1.7'
}

// group, version, java, repositories, configurations 블록은 루트 build.gradle에서 관리됩니다.
// dependencies 블록 내의 공통 의존성도 루트 build.gradle에서 관리됩니다.

dependencies {
    // Spring Boot Starters (back 모듈에만 해당되는 의존성)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.session:spring-session-core'
    
    // JWT (JSON Web Token) 의존성 (back 모듈에만 해당)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    
    // 개발 도구 및 DB 커넥터 (back 모듈에만 해당)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
=======
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'dev.seo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.session:spring-session-core' // 세션 관리용(JWT로 전환 예정)
	
	// JWT (JSON Web Token) 의존성 추가
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // Jackson이 필요
	
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
>>>>>>> 4d505b2aff6a49a7d6bd4034d08618b54258b019
}
