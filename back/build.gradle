plugins {
    id 'org.springframework.boot' version '3.4.3'
    
    // Spring Boot의 의존성 관리를 위한 플러그인
    // 이 플러그인이 있어야 Spring Boot가 관리하는 의존성 버전을 사용할 수 있습니다.
    id 'io.spring.dependency-management' version '1.1.7'
    
    // Java 플러그인 (기본)
    id 'java'
}

group = 'dev.seo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17' // Java 17 사용
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral() // Maven Central 저장소 사용
}

dependencies {
    // Spring Boot Web (웹 애플리케이션 개발용)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Spring Boot Data JPA (JPA ORM 사용용)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    // Spring Boot Security (보안 기능 사용용)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Jakarta Validation API 및 Hibernate Validator 구현체 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation' 
    
    // JWT 라이브러리 (jjwt)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // Jackson은 JSON 파싱/생성용

    // MySQL Connector (MySQL 데이터베이스 연결용)
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // Lombok (코드 간소화용)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Configuration Processor for IDE auto-completion (if using @ConfigurationProperties)
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Spring Boot DevTools (개발 편의성 도구)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Spring Boot Test (테스트 코드 작성용)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // Spring Security Test (보안 테스트용)
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// bootJar 태스크 설정: 실행 가능한 JAR 파일을 생성합니다.
bootJar {
    archiveFileName = "${project.name}-${version}.jar"
}
